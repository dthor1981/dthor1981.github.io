{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/react/my-portfolio/src/d3/AreaStackChart.js\",\n    _s = $RefreshSig$();\n\nimport { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\"; // set the dimensions and margins of the graph\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst margin = {\n  top: 10,\n  right: 30,\n  bottom: 30,\n  left: 60\n},\n      width = 460 - margin.left - margin.right,\n      height = 400 - margin.top - margin.bottom;\n\nfunction AreaStackChart(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const ref = useD3(svg => {\n    console.log(ref); // set the dimensions and margins of the graph\n\n    svg.attr(\"preserveAspectRatio\", \"xMinYMin meet\").attr(\"viewBox\", `0 0 ${width} ${height}`).classed(\"svg-content\", true); // group the data: one array for each value of the X axis.\n\n    var sumstat = d3.nest().key(function (d) {\n      return d.year;\n    }).entries(data); // Stack the data: each group will be represented on top of each other\n\n    var mygroups = [\"Helen\", \"Amanda\", \"Ashley\"]; // list of group names\n\n    var mygroup = [1, 2, 3]; // list of group names\n\n    var stackedData = d3.stack().keys(mygroup).value(function (d, key) {\n      return d.values[key].n;\n    })(sumstat); // Add X axis --> it is a date format\n\n    var x = d3.scaleLinear().domain(d3.extent(data, function (d) {\n      return d.year;\n    })).range([0, width]);\n    svg.append(\"g\").attr(\"transform\", \"translate(0,\" + height + \")\").call(d3.axisBottom(x).ticks(5)); // Add Y axis\n\n    var y = d3.scaleLinear().domain([0, d3.max(data, function (d) {\n      return +d.n;\n    }) * 1.2]).range([height, 0]);\n    svg.append(\"g\").call(d3.axisLeft(y)); // color palette\n\n    var color = d3.scaleOrdinal().domain(mygroups).range([\"#e41a1c\", \"#377eb8\", \"#4daf4a\", \"#984ea3\", \"#ff7f00\", \"#ffff33\", \"#a65628\", \"#f781bf\", \"#999999\"]); // Show the areas\n\n    svg.selectAll(\"mylayers\").data(stackedData).enter().append(\"path\").style(\"fill\", function (d) {\n      name = mygroups[d.key - 1];\n      return color(name);\n    }).attr(\"d\", d3.area().x(function (d, i) {\n      return x(d.data.key);\n    }).y0(function (d) {\n      return y(d[0]);\n    }).y1(function (d) {\n      return y(d[1]);\n    }));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: `0 0 ${height} ${width}`,\n      preserveAspectRatio: \"xMinYMin meet\",\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(AreaStackChart, \"r127xTdrGuIqcYXTmMbvPxoKAyo=\", false, function () {\n  return [useD3];\n});\n\n_c = AreaStackChart;\nexport default AreaStackChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"AreaStackChart\");","map":{"version":3,"sources":["/Volumes/Transcend/react/my-portfolio/src/d3/AreaStackChart.js"],"names":["useD3","React","d3","margin","top","right","bottom","left","width","height","AreaStackChart","data","ref","svg","console","log","attr","classed","sumstat","nest","key","d","year","entries","mygroups","mygroup","stackedData","stack","keys","value","values","n","x","scaleLinear","domain","extent","range","append","call","axisBottom","ticks","y","max","axisLeft","color","scaleOrdinal","selectAll","enter","style","name","area","i","y0","y1"],"mappings":"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","sourcesContent":["import { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\n\n// set the dimensions and margins of the graph\nconst margin = { top: 10, right: 30, bottom: 30, left: 60 },\n  width = 460 - margin.left - margin.right,\n  height = 400 - margin.top - margin.bottom;\n\nfunction AreaStackChart({ data }) {\n  const ref = useD3((svg) => {\n    console.log(ref);\n\n    // set the dimensions and margins of the graph\n    svg\n      .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n      .attr(\"viewBox\", `0 0 ${width} ${height}`)\n      .classed(\"svg-content\", true);\n      \n    // group the data: one array for each value of the X axis.\n    var sumstat = d3\n      .nest()\n      .key(function (d) {\n        return d.year;\n      })\n      .entries(data);\n\n    // Stack the data: each group will be represented on top of each other\n    var mygroups = [\"Helen\", \"Amanda\", \"Ashley\"]; // list of group names\n    var mygroup = [1, 2, 3]; // list of group names\n    var stackedData = d3\n      .stack()\n      .keys(mygroup)\n      .value(function (d, key) {\n        return d.values[key].n;\n      })(sumstat);\n\n    // Add X axis --> it is a date format\n    var x = d3\n      .scaleLinear()\n      .domain(\n        d3.extent(data, function (d) {\n          return d.year;\n        })\n      )\n      .range([0, width]);\n    svg\n      .append(\"g\")\n      .attr(\"transform\", \"translate(0,\" + height + \")\")\n      .call(d3.axisBottom(x).ticks(5));\n\n    // Add Y axis\n    var y = d3\n      .scaleLinear()\n      .domain([\n        0,\n        d3.max(data, function (d) {\n          return +d.n;\n        }) * 1.2,\n      ])\n      .range([height, 0]);\n    svg.append(\"g\").call(d3.axisLeft(y));\n\n    // color palette\n    var color = d3\n      .scaleOrdinal()\n      .domain(mygroups)\n      .range([\n        \"#e41a1c\",\n        \"#377eb8\",\n        \"#4daf4a\",\n        \"#984ea3\",\n        \"#ff7f00\",\n        \"#ffff33\",\n        \"#a65628\",\n        \"#f781bf\",\n        \"#999999\",\n      ]);\n\n    // Show the areas\n    svg\n      .selectAll(\"mylayers\")\n      .data(stackedData)\n      .enter()\n      .append(\"path\")\n      .style(\"fill\", function (d) {\n        name = mygroups[d.key - 1];\n        return color(name);\n      })\n      .attr(\n        \"d\",\n        d3\n          .area()\n          .x(function (d, i) {\n            return x(d.data.key);\n          })\n          .y0(function (d) {\n            return y(d[0]);\n          })\n          .y1(function (d) {\n            return y(d[1]);\n          })\n      );\n  });\n\n  return (\n    <>\n      <svg\n        viewBox={`0 0 ${height} ${width}`}\n        preserveAspectRatio=\"xMinYMin meet\"\n        ref={ref}\n      ></svg>\n    </>\n  );\n}\n\nexport default AreaStackChart;\n"]},"metadata":{},"sourceType":"module"}