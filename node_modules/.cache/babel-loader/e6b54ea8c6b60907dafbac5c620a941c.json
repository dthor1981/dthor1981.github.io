{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/react/my-portfolio/src/d3/LineChart.js\",\n    _s = $RefreshSig$();\n\nimport { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\"; // set the dimensions and margins of the graph\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst margin = {\n  top: 10,\n  right: 30,\n  bottom: 30,\n  left: 60\n},\n      width = 460 - margin.left - margin.right,\n      height = 400 - margin.top - margin.bottom;\n\nfunction LineChart(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const ref = useD3(svg => {\n    // set the dimensions and margins of the graph\n    const margin = {\n      top: 10,\n      right: 30,\n      bottom: 30,\n      left: 60\n    }; // append the svg object to the body of the page\n    // const svg = d3\n    //   .select(\"#my_dataviz\")\n    //   .append(\"svg\")\n\n    svg.attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`);\n    console.log(data); // Add X axis --> it is a date format\n\n    const x = d3.scaleTime().domain(d3.extent(data, function (d) {\n      return d.date;\n    })).range([0, width]);\n    svg.append(\"g\").attr(\"transform\", `translate(0, ${height})`).call(d3.axisBottom(x)); // Add Y axis\n\n    const y = d3.scaleLinear().domain([0, d3.max(data, function (d) {\n      return +d.value;\n    })]).range([height, 0]);\n    svg.append(\"g\").call(d3.axisLeft(y)); // Add the line\n\n    svg.append(\"path\").datum(data).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(function (d) {\n      return x(d.date);\n    }).y(function (d) {\n      return y(d.value);\n    }));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: `0 0 ${height} ${width}`,\n      style: {\n        height: \"100%\",\n        marginRight: \"0px\",\n        marginLeft: \"0px\"\n      },\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(LineChart, \"r127xTdrGuIqcYXTmMbvPxoKAyo=\", false, function () {\n  return [useD3];\n});\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Volumes/Transcend/react/my-portfolio/src/d3/LineChart.js"],"names":["useD3","React","d3","margin","top","right","bottom","left","width","height","LineChart","data","ref","svg","attr","append","console","log","x","scaleTime","domain","extent","d","date","range","call","axisBottom","y","scaleLinear","max","value","axisLeft","datum","line","marginRight","marginLeft"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB,C,CAEA;;;;AACA,MAAMC,MAAM,GAAG;AAAEC,EAAAA,GAAG,EAAE,EAAP;AAAWC,EAAAA,KAAK,EAAE,EAAlB;AAAsBC,EAAAA,MAAM,EAAE,EAA9B;AAAkCC,EAAAA,IAAI,EAAE;AAAxC,CAAf;AAAA,MACEC,KAAK,GAAG,MAAML,MAAM,CAACI,IAAb,GAAoBJ,MAAM,CAACE,KADrC;AAAA,MAEEI,MAAM,GAAG,MAAMN,MAAM,CAACC,GAAb,GAAmBD,MAAM,CAACG,MAFrC;;AAIA,SAASI,SAAT,OAA6B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAC3B,QAAMC,GAAG,GAAGZ,KAAK,CAAEa,GAAD,IAAS;AACzB;AACA,UAAMV,MAAM,GAAG;AAAEC,MAAAA,GAAG,EAAE,EAAP;AAAWC,MAAAA,KAAK,EAAE,EAAlB;AAAsBC,MAAAA,MAAM,EAAE,EAA9B;AAAkCC,MAAAA,IAAI,EAAE;AAAxC,KAAf,CAFyB,CAGzB;AACA;AACA;AACA;;AAEAM,IAAAA,GAAG,CACAC,IADH,CACQ,OADR,EACiBN,KAAK,GAAGL,MAAM,CAACI,IAAf,GAAsBJ,MAAM,CAACE,KAD9C,EAEGS,IAFH,CAEQ,QAFR,EAEkBL,MAAM,GAAGN,MAAM,CAACC,GAAhB,GAAsBD,MAAM,CAACG,MAF/C,EAGGS,MAHH,CAGU,GAHV,EAIGD,IAJH,CAIQ,WAJR,EAIsB,aAAYX,MAAM,CAACI,IAAK,IAAGJ,MAAM,CAACC,GAAI,GAJ5D;AAMAY,IAAAA,OAAO,CAACC,GAAR,CAAYN,IAAZ,EAdyB,CAezB;;AACA,UAAMO,CAAC,GAAGhB,EAAE,CACTiB,SADO,GAEPC,MAFO,CAGNlB,EAAE,CAACmB,MAAH,CAAUV,IAAV,EAAgB,UAAUW,CAAV,EAAa;AAC3B,aAAOA,CAAC,CAACC,IAAT;AACD,KAFD,CAHM,EAOPC,KAPO,CAOD,CAAC,CAAD,EAAIhB,KAAJ,CAPC,CAAV;AAQAK,IAAAA,GAAG,CACAE,MADH,CACU,GADV,EAEGD,IAFH,CAEQ,WAFR,EAEsB,gBAAeL,MAAO,GAF5C,EAGGgB,IAHH,CAGQvB,EAAE,CAACwB,UAAH,CAAcR,CAAd,CAHR,EAxByB,CA6BzB;;AACA,UAAMS,CAAC,GAAGzB,EAAE,CACT0B,WADO,GAEPR,MAFO,CAEA,CACN,CADM,EAENlB,EAAE,CAAC2B,GAAH,CAAOlB,IAAP,EAAa,UAAUW,CAAV,EAAa;AACxB,aAAO,CAACA,CAAC,CAACQ,KAAV;AACD,KAFD,CAFM,CAFA,EAQPN,KARO,CAQD,CAACf,MAAD,EAAS,CAAT,CARC,CAAV;AASAI,IAAAA,GAAG,CAACE,MAAJ,CAAW,GAAX,EAAgBU,IAAhB,CAAqBvB,EAAE,CAAC6B,QAAH,CAAYJ,CAAZ,CAArB,EAvCyB,CAyCzB;;AACAd,IAAAA,GAAG,CACAE,MADH,CACU,MADV,EAEGiB,KAFH,CAESrB,IAFT,EAGGG,IAHH,CAGQ,MAHR,EAGgB,MAHhB,EAIGA,IAJH,CAIQ,QAJR,EAIkB,WAJlB,EAKGA,IALH,CAKQ,cALR,EAKwB,GALxB,EAMGA,IANH,CAOI,GAPJ,EAQIZ,EAAE,CACC+B,IADH,GAEGf,CAFH,CAEK,UAAUI,CAAV,EAAa;AACd,aAAOJ,CAAC,CAACI,CAAC,CAACC,IAAH,CAAR;AACD,KAJH,EAKGI,CALH,CAKK,UAAUL,CAAV,EAAa;AACd,aAAOK,CAAC,CAACL,CAAC,CAACQ,KAAH,CAAR;AACD,KAPH,CARJ;AAiBD,GA3DgB,CAAjB;AA6DA,sBACE;AAAA,2BACE;AACE,MAAA,OAAO,EAAG,OAAMrB,MAAO,IAAGD,KAAM,EADlC;AAEE,MAAA,KAAK,EAAE;AACLC,QAAAA,MAAM,EAAE,MADH;AAELyB,QAAAA,WAAW,EAAE,KAFR;AAGLC,QAAAA,UAAU,EAAE;AAHP,OAFT;AAOE,MAAA,GAAG,EAAEvB;AAPP;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAaD;;GA3EQF,S;UACKV,K;;;KADLU,S;AA6ET,eAAeA,SAAf","sourcesContent":["import { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\n\n// set the dimensions and margins of the graph\nconst margin = { top: 10, right: 30, bottom: 30, left: 60 },\n  width = 460 - margin.left - margin.right,\n  height = 400 - margin.top - margin.bottom;\n\nfunction LineChart({ data }) {\n  const ref = useD3((svg) => {\n    // set the dimensions and margins of the graph\n    const margin = { top: 10, right: 30, bottom: 30, left: 60 };\n    // append the svg object to the body of the page\n    // const svg = d3\n    //   .select(\"#my_dataviz\")\n    //   .append(\"svg\")\n\n    svg\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    console.log(data);\n    // Add X axis --> it is a date format\n    const x = d3\n      .scaleTime()\n      .domain(\n        d3.extent(data, function (d) {\n          return d.date;\n        })\n      )\n      .range([0, width]);\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(0, ${height})`)\n      .call(d3.axisBottom(x));\n\n    // Add Y axis\n    const y = d3\n      .scaleLinear()\n      .domain([\n        0,\n        d3.max(data, function (d) {\n          return +d.value;\n        }),\n      ])\n      .range([height, 0]);\n    svg.append(\"g\").call(d3.axisLeft(y));\n\n    // Add the line\n    svg\n      .append(\"path\")\n      .datum(data)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"steelblue\")\n      .attr(\"stroke-width\", 1.5)\n      .attr(\n        \"d\",\n        d3\n          .line()\n          .x(function (d) {\n            return x(d.date);\n          })\n          .y(function (d) {\n            return y(d.value);\n          })\n      );\n  });\n\n  return (\n    <>\n      <svg\n        viewBox={`0 0 ${height} ${width}`}\n        style={{\n          height: \"100%\",\n          marginRight: \"0px\",\n          marginLeft: \"0px\",\n        }}\n        ref={ref}\n      ></svg>\n    </>\n  );\n}\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}