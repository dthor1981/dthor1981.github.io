{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/react/my-portfolio/src/d3/HorizontalBarChart.js\",\n    _s = $RefreshSig$();\n\nimport { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet width = 200;\nlet height = 120;\n\nfunction HorizontalBarChart(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const ref = useD3(svg => {\n    // set the dimensions and margins of the graph\n    // var margin = { top: 10, right: 30, bottom: 30, left: 60 };\n    // width = 200 - margin.left - margin.right;\n    // height = 120 - margin.top - margin.bottom;\n    svg.attr(\"preserveAspectRatio\", \"xMinYMin meet\").attr(\"viewBox\", \"0 0 200 120\").classed(\"svg-content\", true).append(\"g\").attr(\"transform\", `translate(10, 10`); // Add X axis\n\n    const x = d3.scaleLinear().domain([0, 6000]).range([40, width]);\n    svg.append(\"g\").attr(\"transform\", `translate(0, 90)`).call(d3.axisBottom(x)).selectAll(\"text\").attr(\"transform\", \"translate(-10,0)rotate(-45)\").style(\"text-anchor\", \"end\"); // Y axis\n\n    const y = d3.scaleBand().range([0, height]).domain(data.map(d => d.Country)).padding(0.1).rangeRound([height - margin.bottom, margin.top]);\n    svg.append(\"g\").attr(\"transform\", \"translate(40,0)\").call(d3.axisLeft(y)); //Bars\n\n    svg.selectAll(\"myRect\").data(data).join(\"rect\").attr(\"x\", x(100)).attr(\"height\", y.bandwidth()).attr(\"y\", d => y(d.Country)).attr(\"width\", d => x(d.Value)).attr(\"fill\", \"#69b3a2\"); //Bars\n    // svg\n    //   .selectAll(\"myRect\")\n    //   .data(data)\n    //   .join(\"rect\")\n    //   .attr(\"x\", x(width))\n    //   .attr(\"y\", (d) => y(d.Country))\n    //   .attr(\"width\", (d) => x(d.Value))\n    //   .attr(\"height\", y.bandwidth())\n    //   .attr(\"fill\", \"#69b3a2\");\n  }, [data.length]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref,\n      viewBox: `0 0 ${height} ${width}`,\n      preserveAspectRatio: \"xMinYMin meet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(HorizontalBarChart, \"r127xTdrGuIqcYXTmMbvPxoKAyo=\", false, function () {\n  return [useD3];\n});\n\n_c = HorizontalBarChart;\nexport default HorizontalBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalBarChart\");","map":{"version":3,"sources":["/Volumes/Transcend/react/my-portfolio/src/d3/HorizontalBarChart.js"],"names":["useD3","React","d3","width","height","HorizontalBarChart","data","ref","svg","attr","classed","append","x","scaleLinear","domain","range","call","axisBottom","selectAll","style","y","scaleBand","map","d","Country","padding","rangeRound","margin","bottom","top","axisLeft","join","bandwidth","Value","length"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;;AAEA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,MAAM,GAAG,GAAb;;AAEA,SAASC,kBAAT,OAAsC;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AACpC,QAAMC,GAAG,GAAGP,KAAK,CACdQ,GAAD,IAAS;AACP;AACA;AAEA;AACA;AAEAA,IAAAA,GAAG,CACAC,IADH,CACQ,qBADR,EAC+B,eAD/B,EAEGA,IAFH,CAEQ,SAFR,EAEmB,aAFnB,EAGGC,OAHH,CAGW,aAHX,EAG0B,IAH1B,EAIGC,MAJH,CAIU,GAJV,EAKGF,IALH,CAKQ,WALR,EAKsB,kBALtB,EAPO,CAcP;;AACA,UAAMG,CAAC,GAAGV,EAAE,CAACW,WAAH,GAAiBC,MAAjB,CAAwB,CAAC,CAAD,EAAI,IAAJ,CAAxB,EAAmCC,KAAnC,CAAyC,CAAC,EAAD,EAAKZ,KAAL,CAAzC,CAAV;AACAK,IAAAA,GAAG,CACAG,MADH,CACU,GADV,EAEGF,IAFH,CAEQ,WAFR,EAEsB,kBAFtB,EAGGO,IAHH,CAGQd,EAAE,CAACe,UAAH,CAAcL,CAAd,CAHR,EAIGM,SAJH,CAIa,MAJb,EAKGT,IALH,CAKQ,WALR,EAKqB,6BALrB,EAMGU,KANH,CAMS,aANT,EAMwB,KANxB,EAhBO,CAwBP;;AACA,UAAMC,CAAC,GAAGlB,EAAE,CACTmB,SADO,GAEPN,KAFO,CAED,CAAC,CAAD,EAAIX,MAAJ,CAFC,EAGPU,MAHO,CAGAR,IAAI,CAACgB,GAAL,CAAUC,CAAD,IAAOA,CAAC,CAACC,OAAlB,CAHA,EAIPC,OAJO,CAIC,GAJD,EAKPC,UALO,CAKI,CAACtB,MAAM,GAAGuB,MAAM,CAACC,MAAjB,EAAyBD,MAAM,CAACE,GAAhC,CALJ,CAAV;AAMArB,IAAAA,GAAG,CAACG,MAAJ,CAAW,GAAX,EAAgBF,IAAhB,CAAqB,WAArB,EAAkC,iBAAlC,EAAqDO,IAArD,CAA0Dd,EAAE,CAAC4B,QAAH,CAAYV,CAAZ,CAA1D,EA/BO,CAiCP;;AACAZ,IAAAA,GAAG,CACAU,SADH,CACa,QADb,EAEGZ,IAFH,CAEQA,IAFR,EAGGyB,IAHH,CAGQ,MAHR,EAIGtB,IAJH,CAIQ,GAJR,EAIaG,CAAC,CAAC,GAAD,CAJd,EAKGH,IALH,CAKQ,QALR,EAKkBW,CAAC,CAACY,SAAF,EALlB,EAMGvB,IANH,CAMQ,GANR,EAMcc,CAAD,IAAOH,CAAC,CAACG,CAAC,CAACC,OAAH,CANrB,EAOGf,IAPH,CAOQ,OAPR,EAOkBc,CAAD,IAAOX,CAAC,CAACW,CAAC,CAACU,KAAH,CAPzB,EAQGxB,IARH,CAQQ,MARR,EAQgB,SARhB,EAlCO,CA4CP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAvDc,EAwDf,CAACH,IAAI,CAAC4B,MAAN,CAxDe,CAAjB;AA2DA,sBACE;AAAA,2BACE;AACE,MAAA,GAAG,EAAE3B,GADP;AAEE,MAAA,OAAO,EAAG,OAAMH,MAAO,IAAGD,KAAM,EAFlC;AAGE,MAAA,mBAAmB,EAAC;AAHtB;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AASD;;GArEQE,kB;UACKL,K;;;KADLK,kB;AAuET,eAAeA,kBAAf","sourcesContent":["import { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\n\nlet width = 200;\nlet height = 120;\n\nfunction HorizontalBarChart({ data }) {\n  const ref = useD3(\n    (svg) => {\n      // set the dimensions and margins of the graph\n      // var margin = { top: 10, right: 30, bottom: 30, left: 60 };\n\n      // width = 200 - margin.left - margin.right;\n      // height = 120 - margin.top - margin.bottom;\n\n      svg\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 200 120\")\n        .classed(\"svg-content\", true)\n        .append(\"g\")\n        .attr(\"transform\", `translate(10, 10`);\n\n      // Add X axis\n      const x = d3.scaleLinear().domain([0, 6000]).range([40, width]);\n      svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(0, 90)`)\n        .call(d3.axisBottom(x))\n        .selectAll(\"text\")\n        .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\n        .style(\"text-anchor\", \"end\");\n\n      // Y axis\n      const y = d3\n        .scaleBand()\n        .range([0, height])\n        .domain(data.map((d) => d.Country))\n        .padding(0.1)\n        .rangeRound([height - margin.bottom, margin.top]);\n      svg.append(\"g\").attr(\"transform\", \"translate(40,0)\").call(d3.axisLeft(y));\n\n      //Bars\n      svg\n        .selectAll(\"myRect\")\n        .data(data)\n        .join(\"rect\")\n        .attr(\"x\", x(100))\n        .attr(\"height\", y.bandwidth())\n        .attr(\"y\", (d) => y(d.Country))\n        .attr(\"width\", (d) => x(d.Value))\n        .attr(\"fill\", \"#69b3a2\");\n\n      //Bars\n      // svg\n      //   .selectAll(\"myRect\")\n      //   .data(data)\n      //   .join(\"rect\")\n      //   .attr(\"x\", x(width))\n      //   .attr(\"y\", (d) => y(d.Country))\n      //   .attr(\"width\", (d) => x(d.Value))\n      //   .attr(\"height\", y.bandwidth())\n      //   .attr(\"fill\", \"#69b3a2\");\n    },\n    [data.length]\n  );\n\n  return (\n    <>\n      <svg\n        ref={ref}\n        viewBox={`0 0 ${height} ${width}`}\n        preserveAspectRatio=\"xMinYMin meet\"\n      ></svg>\n    </>\n  );\n}\n\nexport default HorizontalBarChart;\n"]},"metadata":{},"sourceType":"module"}