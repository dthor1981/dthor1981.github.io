{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/react/my-portfolio/src/d3/LineChart.js\",\n    _s = $RefreshSig$();\n\nimport { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\"; // set the dimensions and margins of the graph\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst margin = {\n  top: 10,\n  right: 30,\n  bottom: 30,\n  left: 60\n},\n      width = 460 - margin.left - margin.right,\n      height = 400 - margin.top - margin.bottom;\n\nconst mapData = async data => {\n  return await {\n    date: d3.timeParse(\"%Y-%m-%d\")(data.date),\n    value: data.value\n  };\n};\n\nconst dataMapped = async data => {\n  return await Promise.all(data.map(mapData(data)));\n};\n\nfunction LineChart(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const ref = useD3(svg => {\n    // const dataMapped = data.map(function (d) {\n    //     return {\n    //         date: d3.timeParse(\"%Y-%m-%d\")(d.date) ,\n    //         value: d.value\n    //     }\n    // });\n    const finalMapData = dataMapped(data).then(console.log);\n    console.log(finalMapData);\n    console.log(dataMapped); // set the dimensions and margins of the graph\n\n    const margin = {\n      top: 10,\n      right: 30,\n      bottom: 30,\n      left: 60\n    };\n    svg.attr(\"width\", width + margin.left + margin.right).attr(\"height\", height + margin.top + margin.bottom).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`); // Add X axis --> it is a date format\n\n    const x = d3.scaleTime().domain(d3.extent(dataMapped, function (d) {\n      return d.date;\n    })).range([0, width]);\n    svg.append(\"g\").attr(\"transform\", `translate(0, ${height})`).call(d3.axisBottom(x)); // Add Y axis\n\n    const y = d3.scaleLinear().domain([0, d3.max(dataMapped, function (d) {\n      return +d.value;\n    })]).range([height, 0]);\n    svg.append(\"g\").call(d3.axisLeft(y)); // Add the line\n\n    svg.append(\"path\").datum(dataMapped).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(function (d) {\n      return x(d.date);\n    }).y(function (d) {\n      return y(d.value);\n    }));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: `0 0 ${height} ${width}`,\n      style: {\n        height: \"100%\",\n        marginRight: \"0px\",\n        marginLeft: \"0px\"\n      },\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(LineChart, \"r127xTdrGuIqcYXTmMbvPxoKAyo=\", false, function () {\n  return [useD3];\n});\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Volumes/Transcend/react/my-portfolio/src/d3/LineChart.js"],"names":["useD3","React","d3","margin","top","right","bottom","left","width","height","mapData","data","date","timeParse","value","dataMapped","Promise","all","map","LineChart","ref","svg","finalMapData","then","console","log","attr","append","x","scaleTime","domain","extent","d","range","call","axisBottom","y","scaleLinear","max","axisLeft","datum","line","marginRight","marginLeft"],"mappings":"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","sourcesContent":["import { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\n\n// set the dimensions and margins of the graph\nconst margin = { top: 10, right: 30, bottom: 30, left: 60 },\n  width = 460 - margin.left - margin.right,\n  height = 400 - margin.top - margin.bottom;\n\nconst mapData = async (data) => {\n  return await {\n    date: d3.timeParse(\"%Y-%m-%d\")(data.date),\n    value: data.value,\n  };\n};\n\nconst dataMapped = async (data) => {\n  return await Promise.all(data.map(mapData(data)));\n};\n\nfunction LineChart({ data }) {\n  const ref = useD3((svg) => {\n    // const dataMapped = data.map(function (d) {\n    //     return {\n    //         date: d3.timeParse(\"%Y-%m-%d\")(d.date) ,\n    //         value: d.value\n    //     }\n    // });\n\n    const finalMapData = dataMapped(data).then(console.log);\n\n    console.log(finalMapData);\n    console.log(dataMapped);\n    // set the dimensions and margins of the graph\n    const margin = { top: 10, right: 30, bottom: 30, left: 60 };\n    svg\n      .attr(\"width\", width + margin.left + margin.right)\n      .attr(\"height\", height + margin.top + margin.bottom)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    // Add X axis --> it is a date format\n    const x = d3\n      .scaleTime()\n      .domain(\n        d3.extent(dataMapped, function (d) {\n          return d.date;\n        })\n      )\n      .range([0, width]);\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(0, ${height})`)\n      .call(d3.axisBottom(x));\n\n    // Add Y axis\n    const y = d3\n      .scaleLinear()\n      .domain([\n        0,\n        d3.max(dataMapped, function (d) {\n          return +d.value;\n        }),\n      ])\n      .range([height, 0]);\n    svg.append(\"g\").call(d3.axisLeft(y));\n\n    // Add the line\n    svg\n      .append(\"path\")\n      .datum(dataMapped)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"steelblue\")\n      .attr(\"stroke-width\", 1.5)\n      .attr(\n        \"d\",\n        d3\n          .line()\n          .x(function (d) {\n            return x(d.date);\n          })\n          .y(function (d) {\n            return y(d.value);\n          })\n      );\n  });\n\n  return (\n    <>\n      <svg\n        viewBox={`0 0 ${height} ${width}`}\n        style={{\n          height: \"100%\",\n          marginRight: \"0px\",\n          marginLeft: \"0px\",\n        }}\n        ref={ref}\n      ></svg>\n    </>\n  );\n}\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}