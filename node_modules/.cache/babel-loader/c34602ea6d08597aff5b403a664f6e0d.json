{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/react/my-portfolio/src/d3/HorizontalBarChart.js\",\n    _s = $RefreshSig$();\n\nimport { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst width = 200;\nconst height = 120;\n\nfunction HorizontalBarChart(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const ref = useD3(svg => {\n    //set up svg using margin conventions - we'll need plenty of room on the left for labels\n    const margin = {\n      top: 15,\n      right: 25,\n      bottom: 15,\n      left: 60\n    };\n    const width = 960 - margin.left - margin.right,\n          height = 500 - margin.top - margin.bottom;\n    svg.attr(\"preserveAspectRatio\", \"xMinYMin meet\").attr(\"viewBox\", \"0 0 200 120\").classed(\"svg-content\", true).append(\"g\").attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n    const x = d3.scale.linear().range([0, width]).domain([0, d3.max(data, function (d) {\n      return d.value;\n    })]);\n    const y = d3.scale.ordinal().rangeRoundBands([height, 0], 0.1).domain(data.map(function (d) {\n      return d.name;\n    })); //make y axis to show bar names\n\n    const yAxis = d3.svg.axis().scale(y) //no tick marks\n    .tickSize(0).orient(\"left\");\n    const gy = svg.append(\"g\").attr(\"class\", \"y axis\").call(yAxis);\n    const bars = svg.selectAll(\".bar\").data(data).enter().append(\"g\"); //append rects\n\n    bars.append(\"rect\").attr(\"class\", \"bar\").attr(\"y\", function (d) {\n      return y(d.name);\n    }).attr(\"height\", y.rangeBand()).attr(\"x\", 0).attr(\"width\", function (d) {\n      return x(d.value);\n    }); //add a value label to the right of each bar\n\n    bars.append(\"text\").attr(\"class\", \"label\") //y position of the label is halfway down the bar\n    .attr(\"y\", function (d) {\n      return y(d.name) + y.rangeBand() / 2 + 4;\n    }) //x position is 3 pixels to the right of the bar\n    .attr(\"x\", function (d) {\n      return x(d.value) + 3;\n    }).text(function (d) {\n      return d.value;\n    }, [data.length]);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref,\n      viewBox: `0 0 ${height} ${width}`,\n      preserveAspectRatio: \"xMinYMin meet\",\n      children: [/*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"plot-area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"x-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"y-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"tooltip-area\",\n        children: /*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"tooltip-area__text\",\n          children: \"aas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(HorizontalBarChart, \"r127xTdrGuIqcYXTmMbvPxoKAyo=\", false, function () {\n  return [useD3];\n});\n\n_c = HorizontalBarChart;\nexport default HorizontalBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalBarChart\");","map":{"version":3,"sources":["/Volumes/Transcend/react/my-portfolio/src/d3/HorizontalBarChart.js"],"names":["useD3","React","d3","width","height","HorizontalBarChart","data","ref","svg","margin","top","right","bottom","left","attr","classed","append","x","scale","linear","range","domain","max","d","value","y","ordinal","rangeRoundBands","map","name","yAxis","axis","tickSize","orient","gy","call","bars","selectAll","enter","rangeBand","text","length"],"mappings":"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","sourcesContent":["import { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\n\nconst width = 200;\nconst height = 120;\n\nfunction HorizontalBarChart({ data }) {\n  const ref = useD3((svg) => {\n    //set up svg using margin conventions - we'll need plenty of room on the left for labels\n    const margin = {\n      top: 15,\n      right: 25,\n      bottom: 15,\n      left: 60,\n    };\n\n    const width = 960 - margin.left - margin.right,\n      height = 500 - margin.top - margin.bottom;\n\n    svg\n      .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n      .attr(\"viewBox\", \"0 0 200 120\")\n      .classed(\"svg-content\", true)\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\n\n    const x = d3.scale\n      .linear()\n      .range([0, width])\n      .domain([\n        0,\n        d3.max(data, function (d) {\n          return d.value;\n        }),\n      ]);\n\n    const y = d3.scale\n      .ordinal()\n      .rangeRoundBands([height, 0], 0.1)\n      .domain(\n        data.map(function (d) {\n          return d.name;\n        })\n      );\n\n    //make y axis to show bar names\n    const yAxis = d3.svg\n      .axis()\n      .scale(y)\n      //no tick marks\n      .tickSize(0)\n      .orient(\"left\");\n\n    const gy = svg.append(\"g\").attr(\"class\", \"y axis\").call(yAxis);\n\n    const bars = svg.selectAll(\".bar\").data(data).enter().append(\"g\");\n\n    //append rects\n    bars\n      .append(\"rect\")\n      .attr(\"class\", \"bar\")\n      .attr(\"y\", function (d) {\n        return y(d.name);\n      })\n      .attr(\"height\", y.rangeBand())\n      .attr(\"x\", 0)\n      .attr(\"width\", function (d) {\n        return x(d.value);\n      });\n\n    //add a value label to the right of each bar\n    bars\n      .append(\"text\")\n      .attr(\"class\", \"label\")\n      //y position of the label is halfway down the bar\n      .attr(\"y\", function (d) {\n        return y(d.name) + y.rangeBand() / 2 + 4;\n      })\n      //x position is 3 pixels to the right of the bar\n      .attr(\"x\", function (d) {\n        return x(d.value) + 3;\n      })\n      .text(\n        function (d) {\n          return d.value;\n        },\n        [data.length]\n      );\n  });\n\n  return (\n    <>\n      <svg\n        ref={ref}\n        viewBox={`0 0 ${height} ${width}`}\n        preserveAspectRatio=\"xMinYMin meet\"\n      >\n        <g className=\"plot-area\" />\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n        <g className=\"tooltip-area\">\n          <text className=\"tooltip-area__text\">aas</text>\n        </g>\n      </svg>\n    </>\n  );\n}\n\nexport default HorizontalBarChart;\n"]},"metadata":{},"sourceType":"module"}