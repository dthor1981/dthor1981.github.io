{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/react/my-portfolio/src/d3/HorizontalBarChart.js\",\n    _s = $RefreshSig$();\n\nimport { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet width = 200;\nlet height = 120;\n\nfunction HorizontalBarChart(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const ref = useD3(svg => {\n    // set the dimensions and margins of the graph\n    const margin = {\n      top: 10,\n      right: 10,\n      bottom: 20,\n      left: 40\n    };\n    width = 200 - margin.left - margin.right;\n    height = 120 - margin.top - margin.bottom;\n    svg.attr(\"preserveAspectRatio\", \"xMinYMin meet\").attr(\"viewBox\", \"0 0 200 120\").classed(\"svg-content\", true); // Add X axis\n\n    const x = d3.scaleLinear().domain([0, 5000]).rangeRound([0, width]);\n    svg.append(\"g\").attr(\"transform\", `translate(${margin.left},${height})`).call(d3.axisBottom(x)).selectAll(\"text\").attr(\"transform\", \"translate(-10,0)rotate(-45)\").style(\"text-anchor\", \"end\").style(\"font-size\", 8); // Y axis\n\n    const y = d3.scaleBand().rangeRound([0, height]).domain(data.map(d => d.Country)).padding(0.1);\n    svg.append(\"g\").style(\"font-size\", 8).call(d3.axisLeft(y)).attr(\"transform\", `translate(${margin.left},0)`); // Add X axis\n    //Bars\n\n    svg.selectAll(\"myRect\").data(data).join(\"rect\").attr(\"x\", x(0)).attr(\"height\", y.bandwidth()).attr(\"y\", d => y(d.Country)).attr(\"width\", d => x(d.Value)).attr(\"fill\", \"#69b3a2\").attr(\"transform\", `translate(${margin.left},0)`); //Bars\n    // svg\n    //   .selectAll(\"myRect\")\n    //   .data(data)\n    //   .join(\"rect\")\n    //   .attr(\"x\", x(width))\n    //   .attr(\"y\", (d) => y(d.Country))\n    //   .attr(\"width\", (d) => x(d.Value))\n    //   .attr(\"height\", y.bandwidth())\n    //   .attr(\"fill\", \"#69b3a2\");\n  }, [data.length]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref,\n      viewBox: `0 0 ${height} ${width}`,\n      preserveAspectRatio: \"xMinYMin meet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(HorizontalBarChart, \"r127xTdrGuIqcYXTmMbvPxoKAyo=\", false, function () {\n  return [useD3];\n});\n\n_c = HorizontalBarChart;\nexport default HorizontalBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalBarChart\");","map":{"version":3,"sources":["/Volumes/Transcend/react/my-portfolio/src/d3/HorizontalBarChart.js"],"names":["useD3","React","d3","width","height","HorizontalBarChart","data","ref","svg","margin","top","right","bottom","left","attr","classed","x","scaleLinear","domain","rangeRound","append","call","axisBottom","selectAll","style","y","scaleBand","map","d","Country","padding","axisLeft","join","bandwidth","Value","length"],"mappings":"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","sourcesContent":["import { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\n\nlet width = 200;\nlet height = 120;\n\nfunction HorizontalBarChart({ data }) {\n  const ref = useD3(\n    (svg) => {\n      // set the dimensions and margins of the graph\n      const margin = { top: 10, right: 10, bottom: 20, left: 40 };\n\n      width = 200 - margin.left - margin.right;\n      height = 120 - margin.top - margin.bottom;\n\n      svg\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 200 120\")\n        .classed(\"svg-content\", true);\n\n      // Add X axis\n      const x = d3.scaleLinear().domain([0, 5000]).rangeRound([0, width]);\n      svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left},${height})`)\n        .call(d3.axisBottom(x))\n        .selectAll(\"text\")\n        .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\n        .style(\"text-anchor\", \"end\")\n        .style(\"font-size\",8);\n\n      // Y axis\n      const y = d3\n        .scaleBand()\n        .rangeRound([0, height])\n        .domain(data.map((d) => d.Country))\n        .padding(0.1);\n      svg\n        .append(\"g\")\n        .style(\"font-size\",8)\n        .call(d3.axisLeft(y))\n        .attr(\"transform\", `translate(${margin.left},0)`);\n      // Add X axis\n      //Bars\n      svg\n        .selectAll(\"myRect\")\n        .data(data)\n        .join(\"rect\")\n        .attr(\"x\", x(0))\n        .attr(\"height\", y.bandwidth())\n        .attr(\"y\", (d) => y(d.Country))\n        .attr(\"width\", (d) => x(d.Value))\n        .attr(\"fill\", \"#69b3a2\")\n        .attr(\"transform\", `translate(${margin.left},0)`);\n\n      //Bars\n      // svg\n      //   .selectAll(\"myRect\")\n      //   .data(data)\n      //   .join(\"rect\")\n      //   .attr(\"x\", x(width))\n      //   .attr(\"y\", (d) => y(d.Country))\n      //   .attr(\"width\", (d) => x(d.Value))\n      //   .attr(\"height\", y.bandwidth())\n      //   .attr(\"fill\", \"#69b3a2\");\n    },\n    [data.length]\n  );\n\n  return (\n    <>\n      <svg\n        ref={ref}\n        viewBox={`0 0 ${height} ${width}`}\n        preserveAspectRatio=\"xMinYMin meet\"\n      ></svg>\n    </>\n  );\n}\n\nexport default HorizontalBarChart;\n"]},"metadata":{},"sourceType":"module"}