{"ast":null,"code":"import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\nexport default function (projection, context) {\n  let digits = 3,\n      pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n\n    return contextStream.result();\n  }\n\n  path.area = function (object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function (object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function (object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function (object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function (_) {\n    if (!arguments.length) return projection;\n    projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream;\n    return path;\n  };\n\n  path.context = function (_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString(digits)) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function (_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  path.digits = function (_) {\n    if (!arguments.length) return digits;\n    if (_ == null) digits = null;else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    if (context === null) contextStream = new PathString(digits);\n    return path;\n  };\n\n  return path.projection(projection).digits(digits).context(context);\n}","map":{"version":3,"sources":["/Volumes/Transcend/react/my-portfolio/node_modules/d3-geo/src/path/index.js"],"names":["identity","stream","pathArea","pathBounds","pathCentroid","PathContext","pathMeasure","PathString","projection","context","digits","pointRadius","projectionStream","contextStream","path","object","apply","arguments","result","area","measure","bounds","centroid","_","length","d","Math","floor","RangeError"],"mappings":"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","sourcesContent":["import identity from \"../identity.js\";\nimport stream from \"../stream.js\";\nimport pathArea from \"./area.js\";\nimport pathBounds from \"./bounds.js\";\nimport pathCentroid from \"./centroid.js\";\nimport PathContext from \"./context.js\";\nimport pathMeasure from \"./measure.js\";\nimport PathString from \"./string.js\";\n\nexport default function(projection, context) {\n  let digits = 3,\n      pointRadius = 4.5,\n      projectionStream,\n      contextStream;\n\n  function path(object) {\n    if (object) {\n      if (typeof pointRadius === \"function\") contextStream.pointRadius(+pointRadius.apply(this, arguments));\n      stream(object, projectionStream(contextStream));\n    }\n    return contextStream.result();\n  }\n\n  path.area = function(object) {\n    stream(object, projectionStream(pathArea));\n    return pathArea.result();\n  };\n\n  path.measure = function(object) {\n    stream(object, projectionStream(pathMeasure));\n    return pathMeasure.result();\n  };\n\n  path.bounds = function(object) {\n    stream(object, projectionStream(pathBounds));\n    return pathBounds.result();\n  };\n\n  path.centroid = function(object) {\n    stream(object, projectionStream(pathCentroid));\n    return pathCentroid.result();\n  };\n\n  path.projection = function(_) {\n    if (!arguments.length) return projection;\n    projectionStream = _ == null ? (projection = null, identity) : (projection = _).stream;\n    return path;\n  };\n\n  path.context = function(_) {\n    if (!arguments.length) return context;\n    contextStream = _ == null ? (context = null, new PathString(digits)) : new PathContext(context = _);\n    if (typeof pointRadius !== \"function\") contextStream.pointRadius(pointRadius);\n    return path;\n  };\n\n  path.pointRadius = function(_) {\n    if (!arguments.length) return pointRadius;\n    pointRadius = typeof _ === \"function\" ? _ : (contextStream.pointRadius(+_), +_);\n    return path;\n  };\n\n  path.digits = function(_) {\n    if (!arguments.length) return digits;\n    if (_ == null) digits = null;\n    else {\n      const d = Math.floor(_);\n      if (!(d >= 0)) throw new RangeError(`invalid digits: ${_}`);\n      digits = d;\n    }\n    if (context === null) contextStream = new PathString(digits);\n    return path;\n  };\n\n  return path.projection(projection).digits(digits).context(context);\n}\n"]},"metadata":{},"sourceType":"module"}