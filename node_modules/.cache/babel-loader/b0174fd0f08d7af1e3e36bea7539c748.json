{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/react/my-portfolio/src/d3/PieChart.js\",\n    _s = $RefreshSig$();\n\nimport { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet width = 100;\nlet height = 60;\n\nlet name = _ref => {\n  let [x] = _ref;\n  return x;\n}; // given d in data, returns the (ordinal) label\n\n\nlet value = _ref2 => {\n  let [, y] = _ref2;\n  return y;\n}; // given d in data, returns the (quantitative) value\n\n\nlet title = null | undefined; // given d in data, returns the title text\n\nlet innerRadius = 0; // inner radius of pie, in pixels (non-zero for donut)\n\nlet outerRadius = Math.min(width, height) / 2; // outer radius of pie, in pixels\n\nlet labelRadius = innerRadius * 0.2 + outerRadius * 0.8; // center radius of labels\n\nlet format = \",\"; // a format specifier for values (in the label)\n\nlet names = []; // array of names (the domain of the color scale)\n\nlet colors = []; // array of colors for names\n\nlet stroke = innerRadius > 0 ? \"none\" : \"white\"; // stroke separating widths\n\nlet strokeWidth = 1; // width of stroke separating wedges\n\nlet strokeLinejoin = \"round\"; // line join of stroke separating wedges\n\nlet padAngle = stroke === \"none\" ? 1 / outerRadius : 0; // angular separation between wedges\n\nfunction PieChart(_ref3) {\n  _s();\n\n  let {\n    data\n  } = _ref3;\n  const ref = useD3(svg => {\n    console.log(data); // Compute values.\n\n    const N = d3.map(data, name);\n    const V = d3.map(data, value);\n    const I = d3.range(N.length).filter(i => !isNaN(V[i]));\n    console.log(N); // Unique the names.\n\n    if (names === undefined) names = N;\n    names = new d3.InternSet(names); // Choose a default color scheme based on cardinality.\n\n    if (colors === undefined) colors = d3.schemeSpectral[names.size];\n    if (colors === undefined) colors = d3.quantize(t => d3.interpolateSpectral(t * 0.8 + 0.1), names.size); // Construct scales.\n\n    const color = d3.scaleOrdinal(names, colors); // Compute titles.\n\n    if (title === undefined) {\n      const formatValue = d3.format(format);\n\n      title = i => `${N[i]}\\n${formatValue(V[i])}`;\n    } else {\n      const O = d3.map(data, d => d);\n      const T = title;\n\n      title = i => T(O[i], i, data);\n    } // Compute titles.\n\n\n    if (title === undefined) {\n      const formatValue = d3.format(format);\n\n      title = i => `${N[i]}\\n${formatValue(V[i])}`;\n    } else {\n      const O = d3.map(data, d => d);\n      const T = title;\n\n      title = i => T(O[i], i, data);\n    } // Construct arcs.\n\n\n    const arcs = d3.pie().padAngle(padAngle).sort(null).value(i => V[i])(I);\n    const arc = d3.arc().innerRadius(innerRadius).outerRadius(outerRadius);\n    const arcLabel = d3.arc().innerRadius(labelRadius).outerRadius(labelRadius);\n    svg.attr(\"preserveAspectRatio\", \"xMinYMin meet\").attr(\"viewBox\", \"0 0 100 60\").classed(\"svg-content\", true);\n    svg.append(\"g\").attr(\"stroke\", stroke).attr(\"stroke-width\", strokeWidth).attr(\"stroke-linejoin\", strokeLinejoin).selectAll(\"path\").data(arcs).join(\"path\").attr(\"fill\", d => color(N[d.data])).attr(\"d\", arc).append(\"title\").text(d => title(d.data));\n    svg.append(\"g\").attr(\"font-family\", \"sans-serif\").attr(\"font-size\", 10).attr(\"text-anchor\", \"middle\").selectAll(\"text\").data(arcs).join(\"text\").attr(\"transform\", d => `translate(${arcLabel.centroid(d)})`).selectAll(\"tspan\").data(d => {\n      const lines = `${title(d.data)}`.split(/\\n/);\n      return d.endAngle - d.startAngle > 0.25 ? lines : lines.slice(0, 1);\n    }).join(\"tspan\").attr(\"x\", 0).attr(\"y\", (_, i) => `${i * 1.1}em`).attr(\"font-weight\", (_, i) => i ? null : \"bold\").text(d => d);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: `0 0 ${height} ${width}`,\n      preserveAspectRatio: \"xMinYMin meet\",\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(PieChart, \"r127xTdrGuIqcYXTmMbvPxoKAyo=\", false, function () {\n  return [useD3];\n});\n\n_c = PieChart;\nexport default PieChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"sources":["/Volumes/Transcend/react/my-portfolio/src/d3/PieChart.js"],"names":["useD3","React","d3","width","height","name","x","value","y","title","undefined","innerRadius","outerRadius","Math","min","labelRadius","format","names","colors","stroke","strokeWidth","strokeLinejoin","padAngle","PieChart","data","ref","svg","console","log","N","map","V","I","range","length","filter","i","isNaN","InternSet","schemeSpectral","size","quantize","t","interpolateSpectral","color","scaleOrdinal","formatValue","O","d","T","arcs","pie","sort","arc","arcLabel","attr","classed","append","selectAll","join","text","centroid","lines","split","endAngle","startAngle","slice","_"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;;AAEA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,MAAM,GAAG,EAAb;;AAEA,IAAIC,IAAI,GAAG;AAAA,MAAC,CAACC,CAAD,CAAD;AAAA,SAASA,CAAT;AAAA,CAAX,C,CAAuB;;;AACvB,IAAIC,KAAK,GAAG;AAAA,MAAC,GAAGC,CAAH,CAAD;AAAA,SAAWA,CAAX;AAAA,CAAZ,C,CAA0B;;;AAC1B,IAAIC,KAAK,GAAG,OAAOC,SAAnB,C,CAA8B;;AAC9B,IAAIC,WAAW,GAAG,CAAlB,C,CAAqB;;AACrB,IAAIC,WAAW,GAAGC,IAAI,CAACC,GAAL,CAASX,KAAT,EAAgBC,MAAhB,IAA0B,CAA5C,C,CAA+C;;AAC/C,IAAIW,WAAW,GAAGJ,WAAW,GAAG,GAAd,GAAoBC,WAAW,GAAG,GAApD,C,CAAyD;;AACzD,IAAII,MAAM,GAAG,GAAb,C,CAAkB;;AAClB,IAAIC,KAAK,GAAG,EAAZ,C,CAAgB;;AAChB,IAAIC,MAAM,GAAG,EAAb,C,CAAiB;;AACjB,IAAIC,MAAM,GAAGR,WAAW,GAAG,CAAd,GAAkB,MAAlB,GAA2B,OAAxC,C,CAAiD;;AACjD,IAAIS,WAAW,GAAG,CAAlB,C,CAAqB;;AACrB,IAAIC,cAAc,GAAG,OAArB,C,CAA8B;;AAC9B,IAAIC,QAAQ,GAAGH,MAAM,KAAK,MAAX,GAAoB,IAAIP,WAAxB,GAAsC,CAArD,C,CAAwD;;AAExD,SAASW,QAAT,QAA4B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAC1B,QAAMC,GAAG,GAAGzB,KAAK,CAAE0B,GAAD,IAAS;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EADyB,CAGzB;;AACA,UAAMK,CAAC,GAAG3B,EAAE,CAAC4B,GAAH,CAAON,IAAP,EAAanB,IAAb,CAAV;AACA,UAAM0B,CAAC,GAAG7B,EAAE,CAAC4B,GAAH,CAAON,IAAP,EAAajB,KAAb,CAAV;AACA,UAAMyB,CAAC,GAAG9B,EAAE,CAAC+B,KAAH,CAASJ,CAAC,CAACK,MAAX,EAAmBC,MAAnB,CAA2BC,CAAD,IAAO,CAACC,KAAK,CAACN,CAAC,CAACK,CAAD,CAAF,CAAvC,CAAV;AAEAT,IAAAA,OAAO,CAACC,GAAR,CAAYC,CAAZ,EARyB,CASzB;;AACA,QAAIZ,KAAK,KAAKP,SAAd,EAAyBO,KAAK,GAAGY,CAAR;AACzBZ,IAAAA,KAAK,GAAG,IAAIf,EAAE,CAACoC,SAAP,CAAiBrB,KAAjB,CAAR,CAXyB,CAazB;;AACA,QAAIC,MAAM,KAAKR,SAAf,EAA0BQ,MAAM,GAAGhB,EAAE,CAACqC,cAAH,CAAkBtB,KAAK,CAACuB,IAAxB,CAAT;AAC1B,QAAItB,MAAM,KAAKR,SAAf,EACEQ,MAAM,GAAGhB,EAAE,CAACuC,QAAH,CACNC,CAAD,IAAOxC,EAAE,CAACyC,mBAAH,CAAuBD,CAAC,GAAG,GAAJ,GAAU,GAAjC,CADA,EAEPzB,KAAK,CAACuB,IAFC,CAAT,CAhBuB,CAqBzB;;AACA,UAAMI,KAAK,GAAG1C,EAAE,CAAC2C,YAAH,CAAgB5B,KAAhB,EAAuBC,MAAvB,CAAd,CAtByB,CAwBzB;;AACA,QAAIT,KAAK,KAAKC,SAAd,EAAyB;AACvB,YAAMoC,WAAW,GAAG5C,EAAE,CAACc,MAAH,CAAUA,MAAV,CAApB;;AACAP,MAAAA,KAAK,GAAI2B,CAAD,IAAQ,GAAEP,CAAC,CAACO,CAAD,CAAI,KAAIU,WAAW,CAACf,CAAC,CAACK,CAAD,CAAF,CAAO,EAA7C;AACD,KAHD,MAGO;AACL,YAAMW,CAAC,GAAG7C,EAAE,CAAC4B,GAAH,CAAON,IAAP,EAAcwB,CAAD,IAAOA,CAApB,CAAV;AACA,YAAMC,CAAC,GAAGxC,KAAV;;AACAA,MAAAA,KAAK,GAAI2B,CAAD,IAAOa,CAAC,CAACF,CAAC,CAACX,CAAD,CAAF,EAAOA,CAAP,EAAUZ,IAAV,CAAhB;AACD,KAhCwB,CAiCzB;;;AACA,QAAIf,KAAK,KAAKC,SAAd,EAAyB;AACvB,YAAMoC,WAAW,GAAG5C,EAAE,CAACc,MAAH,CAAUA,MAAV,CAApB;;AACAP,MAAAA,KAAK,GAAI2B,CAAD,IAAQ,GAAEP,CAAC,CAACO,CAAD,CAAI,KAAIU,WAAW,CAACf,CAAC,CAACK,CAAD,CAAF,CAAO,EAA7C;AACD,KAHD,MAGO;AACL,YAAMW,CAAC,GAAG7C,EAAE,CAAC4B,GAAH,CAAON,IAAP,EAAcwB,CAAD,IAAOA,CAApB,CAAV;AACA,YAAMC,CAAC,GAAGxC,KAAV;;AACAA,MAAAA,KAAK,GAAI2B,CAAD,IAAOa,CAAC,CAACF,CAAC,CAACX,CAAD,CAAF,EAAOA,CAAP,EAAUZ,IAAV,CAAhB;AACD,KAzCwB,CA2CzB;;;AACA,UAAM0B,IAAI,GAAGhD,EAAE,CACZiD,GADU,GAEV7B,QAFU,CAEDA,QAFC,EAGV8B,IAHU,CAGL,IAHK,EAIV7C,KAJU,CAIH6B,CAAD,IAAOL,CAAC,CAACK,CAAD,CAJJ,EAISJ,CAJT,CAAb;AAKA,UAAMqB,GAAG,GAAGnD,EAAE,CAACmD,GAAH,GAAS1C,WAAT,CAAqBA,WAArB,EAAkCC,WAAlC,CAA8CA,WAA9C,CAAZ;AACA,UAAM0C,QAAQ,GAAGpD,EAAE,CAACmD,GAAH,GAAS1C,WAAT,CAAqBI,WAArB,EAAkCH,WAAlC,CAA8CG,WAA9C,CAAjB;AAEAW,IAAAA,GAAG,CACA6B,IADH,CACQ,qBADR,EAC+B,eAD/B,EAEGA,IAFH,CAEQ,SAFR,EAEmB,YAFnB,EAGGC,OAHH,CAGW,aAHX,EAG0B,IAH1B;AAKA9B,IAAAA,GAAG,CACA+B,MADH,CACU,GADV,EAEGF,IAFH,CAEQ,QAFR,EAEkBpC,MAFlB,EAGGoC,IAHH,CAGQ,cAHR,EAGwBnC,WAHxB,EAIGmC,IAJH,CAIQ,iBAJR,EAI2BlC,cAJ3B,EAKGqC,SALH,CAKa,MALb,EAMGlC,IANH,CAMQ0B,IANR,EAOGS,IAPH,CAOQ,MAPR,EAQGJ,IARH,CAQQ,MARR,EAQiBP,CAAD,IAAOJ,KAAK,CAACf,CAAC,CAACmB,CAAC,CAACxB,IAAH,CAAF,CAR5B,EASG+B,IATH,CASQ,GATR,EASaF,GATb,EAUGI,MAVH,CAUU,OAVV,EAWGG,IAXH,CAWSZ,CAAD,IAAOvC,KAAK,CAACuC,CAAC,CAACxB,IAAH,CAXpB;AAaAE,IAAAA,GAAG,CACA+B,MADH,CACU,GADV,EAEGF,IAFH,CAEQ,aAFR,EAEuB,YAFvB,EAGGA,IAHH,CAGQ,WAHR,EAGqB,EAHrB,EAIGA,IAJH,CAIQ,aAJR,EAIuB,QAJvB,EAKGG,SALH,CAKa,MALb,EAMGlC,IANH,CAMQ0B,IANR,EAOGS,IAPH,CAOQ,MAPR,EAQGJ,IARH,CAQQ,WARR,EAQsBP,CAAD,IAAQ,aAAYM,QAAQ,CAACO,QAAT,CAAkBb,CAAlB,CAAqB,GAR9D,EASGU,SATH,CASa,OATb,EAUGlC,IAVH,CAUSwB,CAAD,IAAO;AACX,YAAMc,KAAK,GAAI,GAAErD,KAAK,CAACuC,CAAC,CAACxB,IAAH,CAAS,EAAjB,CAAmBuC,KAAnB,CAAyB,IAAzB,CAAd;AACA,aAAOf,CAAC,CAACgB,QAAF,GAAahB,CAAC,CAACiB,UAAf,GAA4B,IAA5B,GAAmCH,KAAnC,GAA2CA,KAAK,CAACI,KAAN,CAAY,CAAZ,EAAe,CAAf,CAAlD;AACD,KAbH,EAcGP,IAdH,CAcQ,OAdR,EAeGJ,IAfH,CAeQ,GAfR,EAea,CAfb,EAgBGA,IAhBH,CAgBQ,GAhBR,EAgBa,CAACY,CAAD,EAAI/B,CAAJ,KAAW,GAAEA,CAAC,GAAG,GAAI,IAhBlC,EAiBGmB,IAjBH,CAiBQ,aAjBR,EAiBuB,CAACY,CAAD,EAAI/B,CAAJ,KAAWA,CAAC,GAAG,IAAH,GAAU,MAjB7C,EAkBGwB,IAlBH,CAkBSZ,CAAD,IAAOA,CAlBf;AAmBD,GAzFgB,CAAjB;AA2FA,sBACE;AAAA,2BACE;AACE,MAAA,OAAO,EAAG,OAAM5C,MAAO,IAAGD,KAAM,EADlC;AAEE,MAAA,mBAAmB,EAAC,eAFtB;AAGE,MAAA,GAAG,EAAEsB;AAHP;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AASD;;GArGQF,Q;UACKvB,K;;;KADLuB,Q;AAuGT,eAAeA,QAAf","sourcesContent":["import { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\n\nlet width = 100;\nlet height = 60;\n\nlet name = ([x]) => x; // given d in data, returns the (ordinal) label\nlet value = ([, y]) => y; // given d in data, returns the (quantitative) value\nlet title = null | undefined; // given d in data, returns the title text\nlet innerRadius = 0; // inner radius of pie, in pixels (non-zero for donut)\nlet outerRadius = Math.min(width, height) / 2; // outer radius of pie, in pixels\nlet labelRadius = innerRadius * 0.2 + outerRadius * 0.8; // center radius of labels\nlet format = \",\"; // a format specifier for values (in the label)\nlet names = []; // array of names (the domain of the color scale)\nlet colors = []; // array of colors for names\nlet stroke = innerRadius > 0 ? \"none\" : \"white\"; // stroke separating widths\nlet strokeWidth = 1; // width of stroke separating wedges\nlet strokeLinejoin = \"round\"; // line join of stroke separating wedges\nlet padAngle = stroke === \"none\" ? 1 / outerRadius : 0; // angular separation between wedges\n\nfunction PieChart({ data }) {\n  const ref = useD3((svg) => {\n    console.log(data);\n\n    // Compute values.\n    const N = d3.map(data, name);\n    const V = d3.map(data, value);\n    const I = d3.range(N.length).filter((i) => !isNaN(V[i]));\n\n    console.log(N);\n    // Unique the names.\n    if (names === undefined) names = N;\n    names = new d3.InternSet(names);\n\n    // Choose a default color scheme based on cardinality.\n    if (colors === undefined) colors = d3.schemeSpectral[names.size];\n    if (colors === undefined)\n      colors = d3.quantize(\n        (t) => d3.interpolateSpectral(t * 0.8 + 0.1),\n        names.size\n      );\n\n    // Construct scales.\n    const color = d3.scaleOrdinal(names, colors);\n\n    // Compute titles.\n    if (title === undefined) {\n      const formatValue = d3.format(format);\n      title = (i) => `${N[i]}\\n${formatValue(V[i])}`;\n    } else {\n      const O = d3.map(data, (d) => d);\n      const T = title;\n      title = (i) => T(O[i], i, data);\n    }\n    // Compute titles.\n    if (title === undefined) {\n      const formatValue = d3.format(format);\n      title = (i) => `${N[i]}\\n${formatValue(V[i])}`;\n    } else {\n      const O = d3.map(data, (d) => d);\n      const T = title;\n      title = (i) => T(O[i], i, data);\n    }\n\n    // Construct arcs.\n    const arcs = d3\n      .pie()\n      .padAngle(padAngle)\n      .sort(null)\n      .value((i) => V[i])(I);\n    const arc = d3.arc().innerRadius(innerRadius).outerRadius(outerRadius);\n    const arcLabel = d3.arc().innerRadius(labelRadius).outerRadius(labelRadius);\n\n    svg\n      .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n      .attr(\"viewBox\", \"0 0 100 60\")\n      .classed(\"svg-content\", true);\n\n    svg\n      .append(\"g\")\n      .attr(\"stroke\", stroke)\n      .attr(\"stroke-width\", strokeWidth)\n      .attr(\"stroke-linejoin\", strokeLinejoin)\n      .selectAll(\"path\")\n      .data(arcs)\n      .join(\"path\")\n      .attr(\"fill\", (d) => color(N[d.data]))\n      .attr(\"d\", arc)\n      .append(\"title\")\n      .text((d) => title(d.data));\n\n    svg\n      .append(\"g\")\n      .attr(\"font-family\", \"sans-serif\")\n      .attr(\"font-size\", 10)\n      .attr(\"text-anchor\", \"middle\")\n      .selectAll(\"text\")\n      .data(arcs)\n      .join(\"text\")\n      .attr(\"transform\", (d) => `translate(${arcLabel.centroid(d)})`)\n      .selectAll(\"tspan\")\n      .data((d) => {\n        const lines = `${title(d.data)}`.split(/\\n/);\n        return d.endAngle - d.startAngle > 0.25 ? lines : lines.slice(0, 1);\n      })\n      .join(\"tspan\")\n      .attr(\"x\", 0)\n      .attr(\"y\", (_, i) => `${i * 1.1}em`)\n      .attr(\"font-weight\", (_, i) => (i ? null : \"bold\"))\n      .text((d) => d);\n  });\n\n  return (\n    <>\n      <svg\n        viewBox={`0 0 ${height} ${width}`}\n        preserveAspectRatio=\"xMinYMin meet\"\n        ref={ref}\n      ></svg>\n    </>\n  );\n}\n\nexport default PieChart;\n"]},"metadata":{},"sourceType":"module"}