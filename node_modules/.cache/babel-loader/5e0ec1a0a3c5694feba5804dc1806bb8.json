{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/react/my-portfolio/src/d3/LineChart.js\",\n    _s = $RefreshSig$();\n\nimport { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\"; // set the dimensions and margins of the graph\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst margin = {\n  top: 10,\n  right: 30,\n  bottom: 30,\n  left: 60\n},\n      width = 860 - margin.left - margin.right,\n      height = 240 - margin.top - margin.bottom;\n\nfunction LineChart(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const ref = useD3(svg => {\n    console.log(ref);\n    const mapData = data.map(d => {\n      return {\n        date: d3.timeParse(\"%Y-%m-%d\")(d.date),\n        value: d.value\n      };\n    }); // set the dimensions and margins of the graph\n\n    svg.attr(\"preserveAspectRatio\", \"xMinYMin meet\").attr(\"viewBox\", `0 0 ${width} ${height}`).classed(\"svg-content\", true).append(\"g\").attr(\"transform\", `translate(${margin.left},${margin.top})`); // Add X axis --> it is a date format\n\n    const x = d3.scaleTime().domain(d3.extent(mapData, function (d) {\n      return d.date;\n    })).range([0, width]);\n    svg.append(\"g\").attr(\"transform\", `translate(0, ${height})`).call(d3.axisBottom(x)); // Add Y axis\n\n    const y = d3.scaleLinear().domain([0, d3.max(mapData, function (d) {\n      return +d.value;\n    })]).range([height, 10]);\n    svg.append(\"g\").call(d3.axisLeft(y)); // Add the line\n\n    svg.append(\"path\").datum(mapData).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(function (d) {\n      console.log(d.date);\n      return x(d.date);\n    }).y(function (d) {\n      console.log(d.value);\n      return y(d.value);\n    })); // });\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: `0 0 ${height} ${width}`,\n      preserveAspectRatio: \"xMinYMin meet\",\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(LineChart, \"r127xTdrGuIqcYXTmMbvPxoKAyo=\", false, function () {\n  return [useD3];\n});\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Volumes/Transcend/react/my-portfolio/src/d3/LineChart.js"],"names":["useD3","React","d3","margin","top","right","bottom","left","width","height","LineChart","data","ref","svg","console","log","mapData","map","d","date","timeParse","value","attr","classed","append","x","scaleTime","domain","extent","range","call","axisBottom","y","scaleLinear","max","axisLeft","datum","line"],"mappings":"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","sourcesContent":["import { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\n\n// set the dimensions and margins of the graph\nconst margin = { top: 10, right: 30, bottom: 30, left: 60 },\n  width = 860 - margin.left - margin.right,\n  height = 240 - margin.top - margin.bottom;\n\nfunction LineChart({ data }) {\n  const ref = useD3((svg) => {\n    console.log(ref);\n    const mapData = data.map((d) => {\n      return { date: d3.timeParse(\"%Y-%m-%d\")(d.date), value: d.value };\n    });\n    // set the dimensions and margins of the graph\n    svg\n      .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n      .attr(\"viewBox\", `0 0 ${width} ${height}`)\n      .classed(\"svg-content\", true)\n      .append(\"g\")\n      .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n    // Add X axis --> it is a date format\n    const x = d3\n      .scaleTime()\n      .domain(\n        d3.extent(mapData, function (d) {\n          return d.date;\n        })\n      )\n      .range([0, width]);\n    svg\n      .append(\"g\")\n      .attr(\"transform\", `translate(0, ${height})`)\n      .call(d3.axisBottom(x));\n\n    // Add Y axis\n    const y = d3\n      .scaleLinear()\n      .domain([\n        0,\n        d3.max(mapData, function (d) {\n          return +d.value;\n        }),\n      ])\n      .range([height, 10]);\n    svg.append(\"g\").call(d3.axisLeft(y));\n\n    // Add the line\n    svg\n      .append(\"path\")\n      .datum(mapData)\n      .attr(\"fill\", \"none\")\n      .attr(\"stroke\", \"steelblue\")\n      .attr(\"stroke-width\", 1.5)\n      .attr(\n        \"d\",\n        d3\n          .line()\n          .x(function (d) {\n            console.log(d.date);\n            return x(d.date);\n          })\n          .y(function (d) {\n            console.log(d.value);\n            return y(d.value);\n          })\n      );\n    // });\n  });\n\n  return (\n    <>\n      <svg\n        viewBox={`0 0 ${height} ${width}`}\n        preserveAspectRatio = \"xMinYMin meet\"\n        ref={ref}\n      ></svg>\n    </>\n  );\n}\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}