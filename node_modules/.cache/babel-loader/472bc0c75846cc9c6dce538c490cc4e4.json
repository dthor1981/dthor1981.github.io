{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/react/my-portfolio/src/d3/LineChart.js\",\n    _s = $RefreshSig$();\n\nimport { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet height = 500;\nlet width = 500;\n\nfunction LineChart(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const ref = useD3(svg => {\n    console.log(data); // Add X axis --> it is a date format\n\n    const x = d3.scaleTime().domain(d3.extent(data, function (d) {\n      return d.date;\n    })).range([0, width]);\n    svg.append(\"g\").attr(\"transform\", `translate(0, ${height})`).call(d3.axisBottom(x)); // Add Y axis\n\n    const y = d3.scaleLinear().domain([0, d3.max(data, function (d) {\n      return +d.value;\n    })]).range([height, 0]);\n    svg.append(\"g\").call(d3.axisLeft(y)); // Add the line\n\n    svg.append(\"path\").datum(data).attr(\"fill\", \"none\").attr(\"stroke\", \"steelblue\").attr(\"stroke-width\", 1.5).attr(\"d\", d3.line().x(function (d) {\n      return x(d.date);\n    }).y(function (d) {\n      return y(d.value);\n    }));\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: `0 0 ${height} ${width}`,\n      style: {\n        height: \"100%\",\n        marginRight: \"0px\",\n        marginLeft: \"0px\"\n      },\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(LineChart, \"r127xTdrGuIqcYXTmMbvPxoKAyo=\", false, function () {\n  return [useD3];\n});\n\n_c = LineChart;\nexport default LineChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"LineChart\");","map":{"version":3,"sources":["/Volumes/Transcend/react/my-portfolio/src/d3/LineChart.js"],"names":["useD3","React","d3","height","width","LineChart","data","ref","svg","console","log","x","scaleTime","domain","extent","d","date","range","append","attr","call","axisBottom","y","scaleLinear","max","value","axisLeft","datum","line","marginRight","marginLeft"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;;AAEA,IAAIC,MAAM,GAAG,GAAb;AACA,IAAIC,KAAK,GAAG,GAAZ;;AACA,SAASC,SAAT,OAA6B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAC3B,QAAMC,GAAG,GAAGP,KAAK,CAAEQ,GAAD,IAAS;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EADyB,CAExB;;AACA,UAAMK,CAAC,GAAGT,EAAE,CAACU,SAAH,GACTC,MADS,CACFX,EAAE,CAACY,MAAH,CAAUR,IAAV,EAAgB,UAASS,CAAT,EAAY;AAAE,aAAOA,CAAC,CAACC,IAAT;AAAgB,KAA9C,CADE,EAETC,KAFS,CAEH,CAAE,CAAF,EAAKb,KAAL,CAFG,CAAV;AAGFI,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EACGC,IADH,CACQ,WADR,EACsB,gBAAehB,MAAO,GAD5C,EAEGiB,IAFH,CAEQlB,EAAE,CAACmB,UAAH,CAAcV,CAAd,CAFR,EAN0B,CAU1B;;AACA,UAAMW,CAAC,GAAGpB,EAAE,CAACqB,WAAH,GACPV,MADO,CACA,CAAC,CAAD,EAAIX,EAAE,CAACsB,GAAH,CAAOlB,IAAP,EAAa,UAASS,CAAT,EAAY;AAAE,aAAO,CAACA,CAAC,CAACU,KAAV;AAAkB,KAA7C,CAAJ,CADA,EAEPR,KAFO,CAED,CAAEd,MAAF,EAAU,CAAV,CAFC,CAAV;AAGAK,IAAAA,GAAG,CAACU,MAAJ,CAAW,GAAX,EACGE,IADH,CACQlB,EAAE,CAACwB,QAAH,CAAYJ,CAAZ,CADR,EAd0B,CAiB1B;;AACAd,IAAAA,GAAG,CAACU,MAAJ,CAAW,MAAX,EACGS,KADH,CACSrB,IADT,EAEGa,IAFH,CAEQ,MAFR,EAEgB,MAFhB,EAGGA,IAHH,CAGQ,QAHR,EAGkB,WAHlB,EAIGA,IAJH,CAIQ,cAJR,EAIwB,GAJxB,EAKGA,IALH,CAKQ,GALR,EAKajB,EAAE,CAAC0B,IAAH,GACRjB,CADQ,CACN,UAASI,CAAT,EAAY;AAAE,aAAOJ,CAAC,CAACI,CAAC,CAACC,IAAH,CAAR;AAAkB,KAD1B,EAERM,CAFQ,CAEN,UAASP,CAAT,EAAY;AAAE,aAAOO,CAAC,CAACP,CAAC,CAACU,KAAH,CAAR;AAAmB,KAF3B,CALb;AASA,GA3BgB,CAAjB;AA6BA,sBACE;AAAA,2BACE;AACA,MAAA,OAAO,EAAG,OAAMtB,MAAO,IAAGC,KAAM,EADhC;AAEA,MAAA,KAAK,EAAE;AACLD,QAAAA,MAAM,EAAE,MADH;AAEL0B,QAAAA,WAAW,EAAE,KAFR;AAGLC,QAAAA,UAAU,EAAE;AAHP,OAFP;AAOA,MAAA,GAAG,EAAEvB;AAPL;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAYD;;GA1CQF,S;UACKL,K;;;KADLK,S;AA4CT,eAAeA,SAAf","sourcesContent":["import { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\n\nlet height = 500;\nlet width = 500;\nfunction LineChart({ data }) {\n  const ref = useD3((svg) => {\n    console.log(data);\n     // Add X axis --> it is a date format\n     const x = d3.scaleTime()\n     .domain(d3.extent(data, function(d) { return d.date; }))\n     .range([ 0, width ]);\n   svg.append(\"g\")\n     .attr(\"transform\", `translate(0, ${height})`)\n     .call(d3.axisBottom(x));\n\n   // Add Y axis\n   const y = d3.scaleLinear()\n     .domain([0, d3.max(data, function(d) { return +d.value; })])\n     .range([ height, 0 ]);\n   svg.append(\"g\")\n     .call(d3.axisLeft(y));\n\n   // Add the line\n   svg.append(\"path\")\n     .datum(data)\n     .attr(\"fill\", \"none\")\n     .attr(\"stroke\", \"steelblue\")\n     .attr(\"stroke-width\", 1.5)\n     .attr(\"d\", d3.line()\n       .x(function(d) { return x(d.date) })\n       .y(function(d) { return y(d.value) })\n       )\n  });\n\n  return (\n    <>\n      <svg \n      viewBox={`0 0 ${height} ${width}`}\n      style={{\n        height: \"100%\",\n        marginRight: \"0px\",\n        marginLeft: \"0px\",\n      }}\n      ref={ref}></svg>\n    </>\n  );\n}\n\nexport default LineChart;\n"]},"metadata":{},"sourceType":"module"}