{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/react/my-portfolio/src/d3/HorizontalBarChart.js\",\n    _s = $RefreshSig$();\n\nimport { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst width = 200;\nconst height = 120;\n\nfunction HorizontalBarChart(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const ref = useD3(svg => {\n    //   const margin = { top: 10, right: 30, bottom: 30, left: 40 };\n    const margin = {\n      top: 80,\n      right: 50,\n      bottom: 60,\n      left: 200\n    };\n    const plotHeight = height - margin.top - margin.bottom;\n    const plotWidth = width - margin.left - margin.right;\n    svg.attr(\"height\", height).attr(\"width\", width).attr(\"x\", 0).attr(\"y\", 0).attr(\"preserveAspectRatio\", \"xMinYMin meet\").attr(\"viewBox\", \"0 0 200 120\").classed(\"svg-content\", true);\n    const plotOutline = svg.append(\"rect\").attr(\"x\", margin.left).attr(\"y\", margin.top).attr(\"height\", plotHeight).attr(\"width\", plotWidth).style(\"fill\", \"#00AFDB\");\n    const scaleX = d3.scaleBand().domain(data.map(d => d.year)).range([0, plotWidth]);\n    const axisX = svg.append(\"g\").attr(\"transform\", `translate(0, ${plotHeight})`).call(d3.axisBottom(scaleX));\n    axisX.selectAll(\"text\").attr(\"transform\", \"translate(-10,0)rotate(-45)\").style(\"text-anchor\", \"end\");\n    axisX.attr(\"transform\", `translate(${margin.left}, ${plotHeight + margin.top})`); //   const scaleX = d3\n    //     .scaleBand()\n    //     .domain(data.map((d) => d.year))\n    //     .range([0, plotWidth]);\n\n    const scaleY = d3.scaleBand().range([0, plotHeight]).domain(data.map(d => d.year)).padding(0.1); // Adds space between the bars\n\n    const axisY = svg.append(\"g\").call(d3.axisLeft(scaleY).tickSize(0)).attr(\"transform\", `translate(${margin.left}, ${margin.top})`).style(\"font-size\", \"12px\").style(\"font-weight\", \"light\").style(\"fill\", \"#000\").style(\"stroke\", \"none\");\n    svg.append(\"text\").attr(\"text-anchor\", \"end\").attr(\"x\", margin.left + plotWidth + 25).attr(\"y\", margin.top + plotHeight + 25).text(\"IBU\").style(\"font-size\", \"14px\").style(\"font-weight\", \"bold\");\n  }, [data.length]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      ref: ref,\n      viewBox: `0 0 ${height} ${width}`,\n      preserveAspectRatio: \"xMinYMin meet\",\n      children: [/*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"plot-area\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"x-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"y-axis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n        className: \"tooltip-area\",\n        children: /*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"tooltip-area__text\",\n          children: \"aas\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(HorizontalBarChart, \"r127xTdrGuIqcYXTmMbvPxoKAyo=\", false, function () {\n  return [useD3];\n});\n\n_c = HorizontalBarChart;\nexport default HorizontalBarChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"HorizontalBarChart\");","map":{"version":3,"sources":["/Volumes/Transcend/react/my-portfolio/src/d3/HorizontalBarChart.js"],"names":["useD3","React","d3","width","height","HorizontalBarChart","data","ref","svg","margin","top","right","bottom","left","plotHeight","plotWidth","attr","classed","plotOutline","append","style","scaleX","scaleBand","domain","map","d","year","range","axisX","call","axisBottom","selectAll","scaleY","padding","axisY","axisLeft","tickSize","text","length"],"mappings":"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","sourcesContent":["import { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\n\nconst width = 200;\nconst height = 120;\n\nfunction HorizontalBarChart({ data }) {\n  const ref = useD3(\n    (svg) => {\n      //   const margin = { top: 10, right: 30, bottom: 30, left: 40 };\n      const margin = { top: 80, right: 50, bottom: 60, left: 200 };\n      const plotHeight = height - margin.top - margin.bottom;\n      const plotWidth = width - margin.left - margin.right;\n\n      svg\n        .attr(\"height\", height)\n        .attr(\"width\", width)\n        .attr(\"x\", 0)\n        .attr(\"y\", 0)\n        .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n        .attr(\"viewBox\", \"0 0 200 120\")\n        .classed(\"svg-content\", true);\n\n      const plotOutline = svg\n        .append(\"rect\")\n        .attr(\"x\", margin.left)\n        .attr(\"y\", margin.top)\n        .attr(\"height\", plotHeight)\n        .attr(\"width\", plotWidth)\n        .style(\"fill\", \"#00AFDB\");\n\n      const scaleX = d3\n        .scaleBand()\n        .domain(data.map((d) => d.year))\n        .range([0, plotWidth]);\n\n      const axisX = svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(0, ${plotHeight})`)\n        .call(d3.axisBottom(scaleX));\n\n      axisX\n        .selectAll(\"text\")\n        .attr(\"transform\", \"translate(-10,0)rotate(-45)\")\n        .style(\"text-anchor\", \"end\");\n\n      axisX.attr(\n        \"transform\",\n        `translate(${margin.left}, ${plotHeight + margin.top})`\n      );\n\n      //   const scaleX = d3\n      //     .scaleBand()\n      //     .domain(data.map((d) => d.year))\n      //     .range([0, plotWidth]);\n\n      const scaleY = d3\n        .scaleBand()\n        .range([0, plotHeight])\n        .domain(data.map((d) => d.year))\n        .padding(0.1); // Adds space between the bars\n\n      const axisY = svg\n        .append(\"g\")\n        .call(d3.axisLeft(scaleY).tickSize(0))\n        .attr(\"transform\", `translate(${margin.left}, ${margin.top})`)\n        .style(\"font-size\", \"12px\")\n        .style(\"font-weight\", \"light\")\n        .style(\"fill\", \"#000\")\n        .style(\"stroke\", \"none\");\n\n      svg\n        .append(\"text\")\n        .attr(\"text-anchor\", \"end\")\n        .attr(\"x\", margin.left + plotWidth + 25)\n        .attr(\"y\", margin.top + plotHeight + 25)\n        .text(\"IBU\")\n        .style(\"font-size\", \"14px\")\n        .style(\"font-weight\", \"bold\");\n    },\n    [data.length]\n  );\n\n  return (\n    <>\n      <svg\n        ref={ref}\n        viewBox={`0 0 ${height} ${width}`}\n        preserveAspectRatio=\"xMinYMin meet\"\n      >\n        <g className=\"plot-area\" />\n        <g className=\"x-axis\" />\n        <g className=\"y-axis\" />\n        <g className=\"tooltip-area\">\n          <text className=\"tooltip-area__text\">aas</text>\n        </g>\n      </svg>\n    </>\n  );\n}\n\nexport default HorizontalBarChart;\n"]},"metadata":{},"sourceType":"module"}