{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/react/my-portfolio/src/d3/PieChart.js\",\n    _s = $RefreshSig$();\n\nimport { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet width = 100;\nlet height = 60;\n\nfunction PieChart(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const ref = useD3(svg => {\n    console.log(data); // const svg = d3.select(\"svg\"),\n    //   width = svg.attr(\"width\"),\n    //   height = svg.attr(\"height\"),\n\n    svg.attr(\"preserveAspectRatio\", \"xMinYMin meet\").attr(\"viewBox\", \"0 0 100 60\").classed(\"svg-content\", true);\n    const radius = Math.min(width, height) / 2.5;\n    const g = svg.append(\"g\").attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n    const color = d3.scaleOrdinal([\"#4daf4a\", \"#377eb8\", \"#ff7f00\", \"#984ea3\", \"#e41a1c\"]); // Generate the pie\n    // const pie = d3.pie();\n    // Compute the position of each group on the pie:\n\n    var pie = d3.pie().value(function (d) {\n      return d.value;\n    });\n    var dataReady = pie(d3.entries(data.value)); // Now I know that group A goes from 0 degrees to x degrees and so on.\n    // Generate the arcs\n\n    const arc = d3.arc().innerRadius(0).outerRadius(radius); //Generate groups\n\n    const arcs = g.selectAll(\"arc\").data(pie(dataReady)).enter().append(\"g\").attr(\"class\", \"arc\"); //Draw arc paths\n\n    arcs.append(\"path\").attr(\"fill\", function (d, i) {\n      return color(i);\n    }).attr(\"d\", arc);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: `0 0 ${height} ${width}`,\n      preserveAspectRatio: \"xMinYMin meet\",\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(PieChart, \"r127xTdrGuIqcYXTmMbvPxoKAyo=\", false, function () {\n  return [useD3];\n});\n\n_c = PieChart;\nexport default PieChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"sources":["/Volumes/Transcend/react/my-portfolio/src/d3/PieChart.js"],"names":["useD3","React","d3","width","height","PieChart","data","ref","svg","console","log","attr","classed","radius","Math","min","g","append","color","scaleOrdinal","pie","value","d","dataReady","entries","arc","innerRadius","outerRadius","arcs","selectAll","enter","i"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;;AAEA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,MAAM,GAAG,EAAb;;AAEA,SAASC,QAAT,OAA4B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAC1B,QAAMC,GAAG,GAAGP,KAAK,CAAEQ,GAAD,IAAS;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EADyB,CAEzB;AACA;AACA;;AAEAE,IAAAA,GAAG,CACAG,IADH,CACQ,qBADR,EAC+B,eAD/B,EAEGA,IAFH,CAEQ,SAFR,EAEmB,YAFnB,EAGGC,OAHH,CAGW,aAHX,EAG0B,IAH1B;AAKA,UAAMC,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASZ,KAAT,EAAgBC,MAAhB,IAA0B,GAAzC;AACA,UAAMY,CAAC,GAAGR,GAAG,CACVS,MADO,CACA,GADA,EAEPN,IAFO,CAEF,WAFE,EAEW,eAAeR,KAAK,GAAG,CAAvB,GAA2B,GAA3B,GAAiCC,MAAM,GAAG,CAA1C,GAA8C,GAFzD,CAAV;AAIA,UAAMc,KAAK,GAAGhB,EAAE,CAACiB,YAAH,CAAgB,CAC5B,SAD4B,EAE5B,SAF4B,EAG5B,SAH4B,EAI5B,SAJ4B,EAK5B,SAL4B,CAAhB,CAAd,CAhByB,CAuBzB;AACA;AAEA;;AACA,QAAIC,GAAG,GAAGlB,EAAE,CAACkB,GAAH,GAASC,KAAT,CAAe,UAAUC,CAAV,EAAa;AACpC,aAAOA,CAAC,CAACD,KAAT;AACD,KAFS,CAAV;AAGA,QAAIE,SAAS,GAAGH,GAAG,CAAClB,EAAE,CAACsB,OAAH,CAAWlB,IAAI,CAACe,KAAhB,CAAD,CAAnB,CA9ByB,CA+BzB;AAEA;;AACA,UAAMI,GAAG,GAAGvB,EAAE,CAACuB,GAAH,GAASC,WAAT,CAAqB,CAArB,EAAwBC,WAAxB,CAAoCd,MAApC,CAAZ,CAlCyB,CAoCzB;;AACA,UAAMe,IAAI,GAAGZ,CAAC,CACXa,SADU,CACA,KADA,EAEVvB,IAFU,CAELc,GAAG,CAACG,SAAD,CAFE,EAGVO,KAHU,GAIVb,MAJU,CAIH,GAJG,EAKVN,IALU,CAKL,OALK,EAKI,KALJ,CAAb,CArCyB,CA4CzB;;AACAiB,IAAAA,IAAI,CACDX,MADH,CACU,MADV,EAEGN,IAFH,CAEQ,MAFR,EAEgB,UAAUW,CAAV,EAAaS,CAAb,EAAgB;AAC5B,aAAOb,KAAK,CAACa,CAAD,CAAZ;AACD,KAJH,EAKGpB,IALH,CAKQ,GALR,EAKac,GALb;AAMD,GAnDgB,CAAjB;AAqDA,sBACE;AAAA,2BACE;AACE,MAAA,OAAO,EAAG,OAAMrB,MAAO,IAAGD,KAAM,EADlC;AAEE,MAAA,mBAAmB,EAAC,eAFtB;AAGE,MAAA,GAAG,EAAEI;AAHP;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AASD;;GA/DQF,Q;UACKL,K;;;KADLK,Q;AAiET,eAAeA,QAAf","sourcesContent":["import { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\n\nlet width = 100;\nlet height = 60;\n\nfunction PieChart({ data }) {\n  const ref = useD3((svg) => {\n    console.log(data);\n    // const svg = d3.select(\"svg\"),\n    //   width = svg.attr(\"width\"),\n    //   height = svg.attr(\"height\"),\n\n    svg\n      .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n      .attr(\"viewBox\", \"0 0 100 60\")\n      .classed(\"svg-content\", true);\n\n    const radius = Math.min(width, height) / 2.5;\n    const g = svg\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n    const color = d3.scaleOrdinal([\n      \"#4daf4a\",\n      \"#377eb8\",\n      \"#ff7f00\",\n      \"#984ea3\",\n      \"#e41a1c\",\n    ]);\n    // Generate the pie\n    // const pie = d3.pie();\n\n    // Compute the position of each group on the pie:\n    var pie = d3.pie().value(function (d) {\n      return d.value;\n    });\n    var dataReady = pie(d3.entries(data.value));\n    // Now I know that group A goes from 0 degrees to x degrees and so on.\n\n    // Generate the arcs\n    const arc = d3.arc().innerRadius(0).outerRadius(radius);\n\n    //Generate groups\n    const arcs = g\n      .selectAll(\"arc\")\n      .data(pie(dataReady))\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"arc\");\n\n    //Draw arc paths\n    arcs\n      .append(\"path\")\n      .attr(\"fill\", function (d, i) {\n        return color(i);\n      })\n      .attr(\"d\", arc);\n  });\n\n  return (\n    <>\n      <svg\n        viewBox={`0 0 ${height} ${width}`}\n        preserveAspectRatio=\"xMinYMin meet\"\n        ref={ref}\n      ></svg>\n    </>\n  );\n}\n\nexport default PieChart;\n"]},"metadata":{},"sourceType":"module"}