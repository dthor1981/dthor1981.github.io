{"ast":null,"code":"var _jsxFileName = \"/Volumes/Transcend/react/my-portfolio/src/d3/PieChart.js\",\n    _s = $RefreshSig$();\n\nimport { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet width = 100;\nlet height = 60;\n\nfunction PieChart(_ref) {\n  _s();\n\n  let {\n    data\n  } = _ref;\n  const ref = useD3(svg => {\n    console.log(data); // const svg = d3.select(\"svg\"),\n    //   width = svg.attr(\"width\"),\n    //   height = svg.attr(\"height\"),\n\n    svg.attr(\"preserveAspectRatio\", \"xMinYMin meet\").attr(\"viewBox\", \"0 0 100 60\").classed(\"svg-content\", true);\n    const radius = Math.min(width, height) / 2.5;\n    const g = svg.append(\"g\").attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\"); // const color = d3.scaleOrdinal([\n    //   \"#4daf4a\",\n    //   \"#377eb8\",\n    //   \"#ff7f00\",\n    //   \"#984ea3\",\n    //   \"#e41a1c\",\n    // ]);\n\n    const colors = undefined; // Chose a default color scheme based on cardinality.\n\n    if (colors === undefined) colors = d3.schemeSpectral[names.size];\n    if (colors === undefined) colors = d3.quantize(t => d3.interpolateSpectral(t * 0.8 + 0.1), names.size); // Construct scales.\n\n    const color = d3.scaleOrdinal(names, colors); // Generate the pie\n\n    const pie = d3.pie(); // Generate the arcs\n\n    const arc = d3.arc().innerRadius(0).outerRadius(radius); //Generate groups\n\n    const arcs = g.selectAll(\"arc\").data(pie(data)).enter().append(\"g\").attr(\"class\", \"arc\"); //Draw arc paths\n\n    arcs.append(\"path\").attr(\"fill\", function (d, i) {\n      return color(i);\n    }).attr(\"d\", arc);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"svg\", {\n      viewBox: `0 0 ${height} ${width}`,\n      preserveAspectRatio: \"xMinYMin meet\",\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(PieChart, \"r127xTdrGuIqcYXTmMbvPxoKAyo=\", false, function () {\n  return [useD3];\n});\n\n_c = PieChart;\nexport default PieChart;\n\nvar _c;\n\n$RefreshReg$(_c, \"PieChart\");","map":{"version":3,"sources":["/Volumes/Transcend/react/my-portfolio/src/d3/PieChart.js"],"names":["useD3","React","d3","width","height","PieChart","data","ref","svg","console","log","attr","classed","radius","Math","min","g","append","colors","undefined","schemeSpectral","names","size","quantize","t","interpolateSpectral","color","scaleOrdinal","pie","arc","innerRadius","outerRadius","arcs","selectAll","enter","d","i"],"mappings":";;;AAAA,SAASA,KAAT,QAAsB,gBAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,EAAZ,MAAoB,IAApB;;;AAEA,IAAIC,KAAK,GAAG,GAAZ;AACA,IAAIC,MAAM,GAAG,EAAb;;AAEA,SAASC,QAAT,OAA4B;AAAA;;AAAA,MAAV;AAAEC,IAAAA;AAAF,GAAU;AAC1B,QAAMC,GAAG,GAAGP,KAAK,CAAEQ,GAAD,IAAS;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ,EADyB,CAEzB;AACA;AACA;;AAEAE,IAAAA,GAAG,CACFG,IADD,CACM,qBADN,EAC6B,eAD7B,EAECA,IAFD,CAEM,SAFN,EAEiB,YAFjB,EAGCC,OAHD,CAGS,aAHT,EAGwB,IAHxB;AAKA,UAAMC,MAAM,GAAGC,IAAI,CAACC,GAAL,CAASZ,KAAT,EAAgBC,MAAhB,IAA0B,GAAzC;AACA,UAAMY,CAAC,GAAGR,GAAG,CACVS,MADO,CACA,GADA,EAEPN,IAFO,CAEF,WAFE,EAEW,eAAeR,KAAK,GAAG,CAAvB,GAA2B,GAA3B,GAAiCC,MAAM,GAAG,CAA1C,GAA8C,GAFzD,CAAV,CAZyB,CAgBzB;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,UAAMc,MAAM,GAAGC,SAAf,CAzByB,CA0B3B;;AACA,QAAID,MAAM,KAAKC,SAAf,EAA0BD,MAAM,GAAGhB,EAAE,CAACkB,cAAH,CAAkBC,KAAK,CAACC,IAAxB,CAAT;AAC1B,QAAIJ,MAAM,KAAKC,SAAf,EAA0BD,MAAM,GAAGhB,EAAE,CAACqB,QAAH,CAAYC,CAAC,IAAItB,EAAE,CAACuB,mBAAH,CAAuBD,CAAC,GAAG,GAAJ,GAAU,GAAjC,CAAjB,EAAwDH,KAAK,CAACC,IAA9D,CAAT,CA5BC,CA8B3B;;AACA,UAAMI,KAAK,GAAGxB,EAAE,CAACyB,YAAH,CAAgBN,KAAhB,EAAuBH,MAAvB,CAAd,CA/B2B,CAiCzB;;AACA,UAAMU,GAAG,GAAG1B,EAAE,CAAC0B,GAAH,EAAZ,CAlCyB,CAoCzB;;AACA,UAAMC,GAAG,GAAG3B,EAAE,CAAC2B,GAAH,GAASC,WAAT,CAAqB,CAArB,EAAwBC,WAAxB,CAAoClB,MAApC,CAAZ,CArCyB,CAuCzB;;AACA,UAAMmB,IAAI,GAAGhB,CAAC,CACXiB,SADU,CACA,KADA,EAEV3B,IAFU,CAELsB,GAAG,CAACtB,IAAD,CAFE,EAGV4B,KAHU,GAIVjB,MAJU,CAIH,GAJG,EAKVN,IALU,CAKL,OALK,EAKI,KALJ,CAAb,CAxCyB,CA+CzB;;AACAqB,IAAAA,IAAI,CACDf,MADH,CACU,MADV,EAEGN,IAFH,CAEQ,MAFR,EAEgB,UAAUwB,CAAV,EAAaC,CAAb,EAAgB;AAC5B,aAAOV,KAAK,CAACU,CAAD,CAAZ;AACD,KAJH,EAKGzB,IALH,CAKQ,GALR,EAKakB,GALb;AAMD,GAtDgB,CAAjB;AAwDA,sBACE;AAAA,2BACE;AACA,MAAA,OAAO,EAAG,OAAMzB,MAAO,IAAGD,KAAM,EADhC;AAEA,MAAA,mBAAmB,EAAG,eAFtB;AAGA,MAAA,GAAG,EAAEI;AAHL;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAQD;;GAjEQF,Q;UACKL,K;;;KADLK,Q;AAmET,eAAeA,QAAf","sourcesContent":["import { useD3 } from \"../hooks/useD3\";\nimport React from \"react\";\nimport * as d3 from \"d3\";\n\nlet width = 100;\nlet height = 60;\n\nfunction PieChart({ data }) {\n  const ref = useD3((svg) => {\n    console.log(data);\n    // const svg = d3.select(\"svg\"),\n    //   width = svg.attr(\"width\"),\n    //   height = svg.attr(\"height\"),\n\n    svg\n    .attr(\"preserveAspectRatio\", \"xMinYMin meet\")\n    .attr(\"viewBox\", \"0 0 100 60\")\n    .classed(\"svg-content\", true);\n\n    const radius = Math.min(width, height) / 2.5;\n    const g = svg\n      .append(\"g\")\n      .attr(\"transform\", \"translate(\" + width / 2 + \",\" + height / 2 + \")\");\n\n    // const color = d3.scaleOrdinal([\n    //   \"#4daf4a\",\n    //   \"#377eb8\",\n    //   \"#ff7f00\",\n    //   \"#984ea3\",\n    //   \"#e41a1c\",\n    // ]);\n\n\n    const colors = undefined; \n  // Chose a default color scheme based on cardinality.\n  if (colors === undefined) colors = d3.schemeSpectral[names.size];\n  if (colors === undefined) colors = d3.quantize(t => d3.interpolateSpectral(t * 0.8 + 0.1), names.size);\n\n  // Construct scales.\n  const color = d3.scaleOrdinal(names, colors);\n\n    // Generate the pie\n    const pie = d3.pie();\n\n    // Generate the arcs\n    const arc = d3.arc().innerRadius(0).outerRadius(radius);\n\n    //Generate groups\n    const arcs = g\n      .selectAll(\"arc\")\n      .data(pie(data))\n      .enter()\n      .append(\"g\")\n      .attr(\"class\", \"arc\");\n\n    //Draw arc paths\n    arcs\n      .append(\"path\")\n      .attr(\"fill\", function (d, i) {\n        return color(i);\n      })\n      .attr(\"d\", arc);\n  });\n\n  return (\n    <>\n      <svg \n      viewBox={`0 0 ${height} ${width}`}\n      preserveAspectRatio = \"xMinYMin meet\"\n      ref={ref}></svg>\n    </>\n  );\n}\n\nexport default PieChart;\n"]},"metadata":{},"sourceType":"module"}